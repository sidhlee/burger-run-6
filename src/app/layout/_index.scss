.Layout {
  padding-top: var(--height-navbar);

  .Navbar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--height-navbar);
    background: var(--cl-secondary);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1.25em;
    overflow: hidden;
    @include media-sm() {
      justify-content: space-around;
    }

    .MenuIcon {
      display: block; // button is inline.
      // container without text needs padding to be able to have width
      padding: 0;
      width: 40px;
      height: 40px;

      @include media-sm() {
        display: none;
      }
      --burger-height: 4px;
      --offset: 0.25em;
      .hamburger,
      .hamburger:before,
      .hamburger:after {
        content: '';
        display: block;
        width: 100%;
        height: var(--burger-height);
        background: var(--cl-light);
        border-radius: 2px;
      }
      .hamburger::before {
        transform: translateY(calc(var(--burger-height) * -2 - var(--offset)));
      }
      .hamburger::after {
        transform: translateY(calc(var(--burger-height) * 1 + var(--offset)));
      }
    }

    .Navbar__Logo {
      width: 5.75em;
    }
  }
  .SideDrawer {
    nav {
      position: fixed;
      z-index: var(--z-side-drawer);
      top: 0;
      bottom: 0;
      left: 0;
      width: 80%;
      background: var(--cl-light);
      transform: translateX(-100%);
      transition: transform 250ms ease-in-out;
      &.open {
        transform: translateX(0);
      }
    }
  }
}

.NavItems {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  justify-content: space-around;
  background: var(--cl-accent);

  @include media-sm {
    flex-direction: row;
    background: transparent;
    width: auto;
  }
  .NavItem {
    &:not(:last-of-type) {
      border-bottom: 3px dashed rgba(0, 0, 0, 0.1);
    }
    display: flex;
    // absorbs any extra space in the container
    flex: auto; // same as flex: 1 1 auto;
    font-size: 1.2rem;
    a {
      text-decoration: none;
      color: var(--cl-dark);
      opacity: 0.5;
      flex-basis: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      &.active {
        background: rgba(0, 0, 0, 0.3);
        color: var(--cl-light);
      }
      &:focus {
        outline: none;
        background: rgba(0, 0, 0, 0.5);
        color: var(--cl-light);
      }
      &:hover {
        opacity: 1;
      }
      &:active {
        opacity: 0.8;
      }
    }
    @include media-sm {
      // must have the same specificity as the removing rule
      &:not(:last-of-type) {
        border-bottom: none;
      }
      &:hover {
        filter: brightness(1.2);
      }
      &:active {
        filter: brightness(0.9);
      }
      a {
        padding: 1em;
        color: var(--cl-gray);
      }
    }
  }
}
